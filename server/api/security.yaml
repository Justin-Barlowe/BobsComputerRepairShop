openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: API for managing users
paths:
  /api/security/verify/users/{email}/securityquestions:
    post:
      tags:
        - Security
      description: Verify questions for a user
      summary: Verify security questions for a user using their email
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: The email address of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - securityQuestions
              properties:
                securityQuestions:
                  type: array
                  items:
                    type: object
                    required:
                      - question
                      - answer
                    properties:
                      question:
                        type: string
                      answer:
                        type: string
      responses:
        '200':
          description: Successfully verified security questions
        '400':
          description: Bad request - Invalid input provided
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/security/users/{email}/reset-password:
    post:
      tags:
        - Security
      description: reset the password for a user
      summary: Reset the password for a user using their email
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: The email address of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
                  format: password
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Bad request - Invalid input provided
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/security/register: # Documentation for registering user - John D
    post:
      tags:
        - Security
      summary: Register a new user
      description: Adds a new user to the database
      operationId: registerUser
      requestBody:
        description: User object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
                  format: password
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                securityQuestions:
                  type: array
                  items:
                    type: object
                    properties:
                      question:
                        type: string
                      answer:
                        type: string
                  minItems: 3 # minimum items to 3
                  maxItems: 3 # maximum items to 3
              required:
                - userName
                - password
                - firstName
                - lastName
                - email
                - securityQuestions
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input
        '500':
          description: Server Error

  /api/security/register/{email}: # Documentation for verifying user - John D
    get:
      tags:
        - Security
      summary: verify user exists
      description: verify user already exists in the database
      operationId: verifyUser
      parameters:
        - name: email
          in: path
          description: email of user to verify
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully found and verified user
        '400':
          description: Invalid username
        '404':
          description: User not found
        '500':
          description: Internal server error


