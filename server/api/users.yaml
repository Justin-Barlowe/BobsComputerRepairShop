openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users
paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Returns all users
      description: Retrieves all users from the database
      operationId: findAllUsers
      responses:
        '200':
          description: Returned all users
        '500':
          description: Server Exception
        '501':
          description: MongoDB Exception
    post:
      tags:
        - Users
      summary: Creates a new user
      description: Adds a new user to the database
      operationId: createUser
      requestBody:
        description: User object that needs to be added to the database
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - password
                - email
              properties:
                userName:
                  type: string
                password:
                  type: string
                  format: password
                email:
                  type: string
                  format: email
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input
        '500':
          description: Server Error
  /api/users/{id}:
    get:
      tags:
        - Users
      summary: Find user by ID
      description: Retrieves a single user by their unique ID from the database
      operationId: findUserById
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully found and returned the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  userName:
                    type: string
                  email:
                    type: string
                  # Add other user fields as needed
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      tags:
        - Users
      summary: Deletes a user
      description: Soft deletes a user by their unique ID from the database by setting an `isDisabled` flag
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Server error

